@import 'variables';
//buttons
@mixin build-button($size, $color) {
  position: relative;
  display: block;
  z-index: 1;
  background-color: nth($color, 4);
  color: $white;
  border-radius: 3px;
  border: 2px solid nth($color, 4);
  text-decoration: none;
  padding: $size;
  overflow: hidden;
  float: left;
  min-width: 100px;
  max-width: 250px;
  text-align: center;
  vertical-align: middle;
  margin: 0 10px;
  transition: color .3s, background-color .3s;
  transition-timing-function: cubic-bezier(.2, 1, .3, 1);
  &:focus {
    outline: none;
  }
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 150%;
    height: 100%;
    background: #37474f;
    z-index: -1;
    transform: rotate3d(0, 0, 1, -45deg) translate3d(0, -3em, 0);
    transform-origin: 0% 100%;
    transition: transform .3s, opacity .3s, background-color .3s;
  }
  &:hover {
    color: nth($color, 4);
    border-color: nth($color, 4);
    &:before {
      opacity: 1;
      background-color: $white;
      transform: rotate3d(0, 0, 1, 0deg);
      transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
    }
  }
}

@each $colorkey, $color in $color-palette {
  @each $buttonkey, $size in $button-sizes {
    .btn-#{$colorkey}-#{$buttonkey} {
      @include build-button($size, $color);
    }
    .btn-#{$colorkey}-#{$buttonkey}[disabled] {
      background-color: $green3;
      &:before {
        width: 0;
        height: 0;
      }
      &:hover {
        background-color: $green3;
        color: $white;
        &:before {
          background: $green3;
          height: 0;
          width: 0;
          transform: none;
          transition: none;
          transform-origin: 0 0;
        }
      }
    }
  }
}

//flex
@mixin flex-builder($flex-direction){
  display: flex;
  flex-direction: $flex-direction;
  align-items: center;
  justify-content: center;
}

@each $value in column, row {
  .flex-#{$value} {
    @include flex-builder($value);
  }
}

//background-color
@for $i from 1 through 5 {
  @each $key, $value in $color-palette {
    .background-#{$key}-#{$i} {
      background-color: nth($value, $i);
    }
  }
}
